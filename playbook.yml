---
- hosts: all
  become: true
  tasks:
    - name: "Remove docker if installed from CentOS repo"
      yum:
        name:
            - docker
            - docker-client            
            - docker-common
            - docker-engine
        state: absent  

    - name: "Import Docker CE repository gpg key"
      rpm_key:
        key: https://download.docker.com/linux/centos/gpg
        state: present

    - name: Add Docker CE repository
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo
        # force: yes
        # owner: root
        # group: root
        # mode: 0644

    # - name: "Add Docker yum repository"
    #   yum_repository:
    #     name: dockerrepo
    #     description: Docker
    #     baseurl: https://yum.dockerproject.org/repo/main/centos/$releasever/
    #     gpgkey: https://yum.dockerproject.org/gpg
    #     gpgcheck: yes

#     - name: Update all packages
#       yum: name=* state=present update_cache=yes

#     - name: Install packages
#       yum: state=present name={{ item }}
#       with_items:
#       - curl
#       - ipset
#       - git
#       - net-tools
#       - ntp
#       - nc
#       - xz
#       - unzip
#       - telnet
#       - docker-engine-1.13.1
#       - docker-engine-selinux-1.13.1

#     - name: Stop firewalld service due to conflicts with Docker
#       systemd:
#         state: stopped
#         name: firewalld
#         enabled: no

#     - name: Force a time sync
#       command: ntpdate 0.pool.ntp.org

#     - name: Enable timedatectl to sync time
#       command: timedatectl set-ntp true

#     - name: Sync the hardware clock with the system
#       command: timedatectl set-local-rtc 0

#     - name: Create overlay kernel module file
#       lineinfile:
#         create: yes
#         path: /etc/modules-load.d/overlay.conf
#         line: 'overlay'

#     - name: Load overlay kernel module
#       modprobe:
#         name: overlay
#         state: present

#     - name: Create systemd service directory for OverlayFS
#       file: path=/etc/systemd/system/docker.service.d state=directory

#     - name: Create systemd service file for OverlayFS
#       blockinfile:
#         path: /etc/systemd/system/docker.service.d/override.conf
#         create: yes
#         block: |
#          [Service]
#          ExecStart=
#          ExecStart=/usr/bin/dockerd --storage-driver=overlay
#     - name: Create Docker config directory
#       file:
#         path: /etc/docker
#         state: directory

#     - name: Copy the Docker daemon.json
#       template:
#         src: daemon.json.j2
#         dest: /etc/docker/daemon.json

#     - name: Start Docker service
#       systemd:
#         state: reloaded
#         name: docker
#         enabled: yes

#     - name: set SELinux to permissive
#       selinux:
#         policy: targeted
#         state: permissive

#     - name: add nogroup requirement
#       group:
#         name: nogroup
#         state: present

#     - name: Create mesosphere directory for assets
#       file:
#         path: /root/mesosphere
#         state: directory

# - hosts: bootstrap
#   become: true
#   tasks:

#     - name: Install repo for Python3
#       yum:
#         name: https://centos7.iuscommunity.org/ius-release.rpm
#         state: present

#     - name: Install Python3
#       yum: state=present name={{ item }}
#       with_items:
#       - python36u
#       - jq

#     - name: Symlink Python3 binary
#       file:
#         src: /usr/bin/python3.6
#         dest: /usr/bin/python3
#         state: link
#         mode: 0755

#     - name: Create genconf directory
#       file:
#         path: /root/mesosphere/genconf
#         state: directory

#     - name: Symlink in the DC/OS installer
#       file:
#         src: /vagrant/dcos_generate_config.ee.sh
#         dest: /root/mesosphere/dcos_generate_config.ee.sh
#         state: link
#         mode: 0755

#     - name: Copy the ip-detect script
#       template:
#         src: ip-detect.j2
#         dest: /root/mesosphere/genconf/ip-detect
#         mode: 0755

#     - name: Copy the config.yaml
#       template:
#         src: config.yaml.j2
#         dest: /root/mesosphere/genconf/config.yaml

#     - name: Run dcos_generate_config.ee.sh to generate the payload
#       shell: /bin/bash dcos_generate_config.ee.sh
#       args:
#         chdir: /root/mesosphere

#     - name: Launch the bootstrap nginx container
#       shell : docker run -d -p 80:80 -v /root/mesosphere/genconf/serve:/usr/share/nginx/html:ro nginx

#     - name: Launch the registry container
#       shell : docker run -d -p 5000:5000 --restart=always --name registry registry:2

# - hosts: master
#   become: true
#   tasks:
#     - name: Get the installer from the bootstrap node
#       get_url:
#         url: http://192.168.33.10:80/dcos_install.sh
#         dest: /root/mesosphere/dcos_install.sh
#         mode: 0644

#     - name: Run the installer for the master
#       shell: bash dcos_install.sh master
#       args:
#         chdir: /root/mesosphere

# - hosts: private-agent
#   become: true
#   tasks:
#     - name: Get the installer from the bootstrap node
#       get_url:
#         url: http://192.168.33.10:80/dcos_install.sh
#         dest: /root/mesosphere/dcos_install.sh
#         mode: 0644

#     - name: Run the installer for the private agent
#       shell: bash dcos_install.sh slave
#       args:
#         chdir: /root/mesosphere


# - hosts: public-agent
#   become: true
#   tasks:
#     - name: Get the installer from the bootstrap node
#       get_url:
#         url: http://192.168.33.10:80/dcos_install.sh
#         dest: /root/mesosphere/dcos_install.sh
#         mode: 0644

#     - name: Run the installer for the public agent
#       shell: bash dcos_install.sh slave_public
#       args:
#         chdir: /root/mesosphere